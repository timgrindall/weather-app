{"version":3,"sources":["conditions-dict.js","tooltip.js","Card.js","CurrentWeather.js","App.js","serviceWorker.js","index.js"],"names":["n","Tooltip","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","opacity","toggle","bind","assertThisInitialized","tooltipNode","ReactDOM","findDOMNode","setState","top","offsetTop","left","offsetLeft","style","zIndex","react_default","a","createElement","display","color","onMouseEnter","onMouseOut","children","className","role","text","Component","conditionsDict","iconURL","main","Card","id","conditionID","description","temp","Math","round","pressure","tooltip","hour","alt","src","CurrentWeather","isLoaded","data","error","_this2","window","fetch","ID","APIKey","then","res","json","result","console","log","_this$state","message","weather","name","currentTemp","toString","App","timezone","city","cardsList","list","map","day","index","Date","dt","getHours","hourString","src_Card","key","dayTemp","temp_max","nightTemp","temp_min","src_CurrentWeather","href","title","rel","target","Boolean","location","hostname","match","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38ced8e8.chunk.js","sourcesContent":["// will have to make this a generated dict for multiple codes per condition/icon\r\n\r\nconst conditionsDict = {};\r\n\r\nvar n;\t// variable for id\r\n\r\n// ids 200 - 232\r\nfor (n = 200; n <= 232; n++) {\r\n\tconditionsDict[n] = {\r\n\t\ticonURL: \"icons/004-storm.svg\",\r\n\t\tmain: \"Thunderstorm\",\r\n\t}\r\n}\r\n\r\n// ids 300 - 321\r\nfor (n = 300; n <= 321; n++) {\r\n\tconditionsDict[n] = {\r\n\t\ticonURL: \"icons/002-rain.svg\",\r\n\t\tmain: \"Drizzle\",\r\n\t}\r\n}\r\n\r\n// ids 500 - 504\r\nfor (n = 500; n <= 504; n++) {\r\n\tconditionsDict[n] = {\r\n\t\ticonURL: \"icons/049-rain.svg\",\r\n\t\tmain: \"Rain\",\r\n\t}\r\n}\r\n\r\nconditionsDict[511] = {\r\n\ticonURL: \"icons/036-snowflake\",\r\n\tmain: \"Rain\"\r\n}\r\n\r\n// ids 520 - 531\r\nfor (n = 520; n <= 531; n++) {\r\n\tconditionsDict[n] = {\r\n\t\ticonURL: \"icons/002-rain.svg\",\r\n\t\tmain: \"Rain\"\r\n\t}\r\n}\r\n\r\n// ids 600 - 622\r\nfor (n = 600; n <= 622; n++) {\r\n\tconditionsDict[n] = {\r\n\t\ticonURL: \"icons/036-snowflake\",\r\n\t\tmain: \"Snow\"\r\n\t}\r\n}\r\n\r\nconditionsDict[701] = {\r\n\ticonURL: \"icons/038-fog.svg\",\t// technically not \"mist\"\r\n\tmain: \"Mist\"\r\n}\r\n\r\nconditionsDict[711] = {\r\n\ticonURL: \"icons/038-fog.svg\",\t// technically not \"smoke\"\r\n\tmain: \"Smoke\"\r\n}\r\n\r\nconditionsDict[721] = {\r\n\ticonURL: \"icons/038-fog.svg\",\t// technically not \"haze\"\r\n\tmain: \"Haze\"\r\n}\r\n\r\nconditionsDict[731] = {\r\n\ticonURL: \"icons/warning.svg\",\t// technically not \"dust\"\r\n\tmain: \"Dust\"\r\n}\r\n\r\nconditionsDict[741] = {\r\n\ticonURL: \"icons/038-fog.svg\",\t// this one's actually accurate\r\n\tmain: \"Fog\"\r\n}\r\n\r\nconditionsDict[751] = {\r\n\ticonURL: \"icons/warning.svg\",\t// technically not \"sand\"\r\n\tmain: \"Sand\"\r\n}\r\n\r\nconditionsDict[761] = {\r\n\ticonURL: \"icons/warning.svg\",\t// technically not \"dust\"\r\n\tmain: \"Dust\"\r\n}\r\n\r\nconditionsDict[762] = {\r\n\ticonURL: \"icons/warning.svg\",\t// technically not \"dust\"\r\n\tmain: \"Ash\"\r\n}\r\n\r\nconditionsDict[771] = {\r\n\ticonURL: \"icons/025-cloudy.svg\",\t// actually accurate\r\n\tmain: \"Squall\"\r\n}\r\n\r\nconditionsDict[800] = {\r\n\ticonURL: \"icons/022-sun.svg\",\r\n\tmain: \"Clear\"\r\n}\r\n\r\nconditionsDict[801] = {\r\n\ticonURL: \"icons/033-sun.svg\",\r\n\tmain: \"Clouds\"\r\n}\r\n\r\nconditionsDict[802] = {\r\n\ticonURL: \"icons/003-cloud.svg\",\r\n\tmain: \"Clouds\"\r\n}\r\n\r\nconditionsDict[803] = {\r\n\ticonURL: \"icons/001-cloudy.svg\",\r\n\tmain: \"Clouds\"\r\n}\r\n\r\nconditionsDict[804] = {\r\n\ticonURL: \"icons/001-cloudy.svg\",\r\n\tmain: \"Clouds\"\r\n}\r\n\r\n\r\n\r\nexport default conditionsDict;","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './bootstrap.css';\r\n\r\nclass Tooltip extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {opacity: false}\r\n    this.toggle = this.toggle.bind(this)\r\n  }\r\n\r\n  toggle() {\r\n    const tooltipNode = ReactDOM.findDOMNode(this)\r\n    this.setState({\r\n      opacity: !this.state.opacity,\r\n      top: tooltipNode.offsetTop,\r\n      left: tooltipNode.offsetLeft\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      zIndex: (this.state.opacity) ? 1000 : -1000,\r\n      opacity: +this.state.opacity,\r\n      top: (this.state.top || 0) + 20,\r\n      left: (this.state.left || 0) - 0\r\n    }\r\n    return (\r\n      <div style={{display: 'block'}}>\r\n        <div style={{color: 'blue', display: 'inline-block'}} onMouseEnter={this.toggle} onMouseOut={this.toggle}>\r\n          {this.props.children}\r\n        </div>\r\n        <div className=\"tooltip bottom\" style={style} role=\"tooltip\">\r\n          <div className=\"tooltip-arrow\"></div>\r\n          <div className=\"tooltip-inner\">{this.props.text}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Tooltip;","import React, { Component } from 'react';\r\nimport Tooltip from './tooltip.js'\r\n\r\nimport conditionsDict from './conditions-dict.js';\r\n\r\nclass Card extends Component {\r\n\r\n  render() {\r\n    const id = this.props.conditionID;\r\n    var iconURL = \"\";\r\n    const description = this.props.description\r\n    // console.log(id)\r\n    if (conditionsDict[id] != null) {\r\n      iconURL = conditionsDict[id].iconURL;\r\n    } else {\r\n      iconURL = \"icons/warning.svg\";\r\n    }\r\n\r\n    // const day_max = Math.round(this.props.dayTemp);\r\n    // const night_min = Math.round(this.props.nightTemp);\r\n\r\n    const temp = Math.round(this.props.temp);\r\n    const pressure = (Math.round(this.props.pressure)/10); // round to integer and convert to kilopascal\r\n\r\n    return (\r\n      <Tooltip text={description}>\r\n        <div className=\"weather-card\">\r\n          <div className=\"day-name\">{this.props.hour}</div>\r\n          <img className=\"weather-icon\" alt={description} src={iconURL}></img>\r\n          <div className=\"temps\">\r\n            <div className=\"temp\">{temp}&deg;</div>\r\n            <div className=\"pressure\">{pressure}</div>\r\n          </div>\r\n        </div>\r\n      </Tooltip>\r\n    );\r\n  }\r\n}\r\n\r\n/*  old elements\r\n              <div className=\"day-temp\">{day_max}&deg;</div>\r\n              <div className=\"night-temp\">{night_min}&deg;</div>\r\n*/\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\n\r\nimport conditionsDict from './conditions-dict.js';\r\n\r\nclass CurrentWeather extends Component {\r\n\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n    this.state = {\r\n      isLoaded: false,\r\n      data: null,\r\n      error: false\r\n    };\r\n\r\n\t}\r\n\r\n  componentDidMount() {\r\n    window.fetch('http://api.openweathermap.org/data/2.5/weather?id=' + this.props.ID + '&units=Imperial&APPID=' + this.props.APIKey)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({isLoaded: true, data: result});\r\n        },\r\n        (error) => {\r\n          this.setState({isLoaded: true, error});\r\n          console.log(\"Error: \" + error);\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const {isLoaded, data, error} = this.state;\r\n\r\n    if (error) {\r\n      // console.log(data);\r\n      return <div className=\"errorMessage\">Error: {error.message}</div>\r\n    } else if (!isLoaded) {\r\n      // console.log(data);\r\n      return <div className=\"errorMessage\">Loading . . .</div>\r\n    } else {\r\n      // test data object\r\n      // console.log(data);\r\n\r\n      const id = data.weather[0].id;\r\n      const name = data.name;\r\n      const iconURL = conditionsDict[id].iconURL;\r\n      const description = data.weather[0].description;\r\n      const currentTemp = Math.round(data.main.temp);\r\n\r\n      //render\r\n      return (\r\n        <div className=\"CurrentWeather\">\r\n          <div className=\"city-name\">{name}</div>\r\n          <div className=\"current-container\">\r\n            <img className=\"current-icon\" src={iconURL} alt={description}></img>\r\n            <div className=\"current-weather\">{currentTemp}&deg; {description}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default CurrentWeather;","import React, {Component} from 'react';\nimport './App.css';\n\nimport Card from './Card.js';\n// import conditionsDict from './conditions-dict.js';\n// import ajax from './ajax.js';\n\nimport CurrentWeather from './CurrentWeather.js';\n\n// const dayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\n// const hourNames = [\"12 am\", \"3 am\", \" 6 am\", \"9 am\", \"12 pm\", \"3 pm\", \"6 pm\", \"9 pm\"];\nconst APIKey = '8ae490945f36f5acd76d8e89a153d64a';\nconst id = 5809844   // Seattle\n// const id = 6621230   // San Francisco\nconst ID = id.toString();\nconst cnt = 8;\n\nclass App extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      data: null,\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    window.fetch('http://api.openweathermap.org/data/2.5/forecast?id=' + ID + '&units=Imperial&cnt=' + cnt + '&APPID=' + APIKey)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({isLoaded: true, data: result});\n        },\n        (error) => {\n          this.setState({isLoaded: true, error});\n          console.log(\"Error: \" + error);\n        }\n      );\n  }\n\n  render() {\n    const {isLoaded, data, error} = this.state;\n\n    if (error) {\n      // console.log(data);\n      return <div className=\"errorMessage\">Error: {error.message}</div>\n    } else if (!isLoaded) {\n      // console.log(data);\n      return <div className=\"errorMessage\">Loading . . .</div>\n    } else {\n      // test data object\n      // console.log(data);\n      const timezone = data.city.timezone;\n      // console.log(timezone)\n\n      //process items/list\n      const cardsList = data.list.map((day, index) => {\n        var date = new Date((day.dt*1000)+timezone);\n        var hour = date.getHours();\n        \n        var hourString = \"\";\n        if (hour > 12) {\n          const newHour = hour - 12;\n          hourString = newHour + \" pm\";\n        } else {\n          hourString = hour + \" am\";\n        }\n        // hourString = hour + \" hr\";\n        // console.log(date);\n        return <Card key={index} hour={hourString} conditionID={day.weather[0].id} description={day.weather[0].description} temp={day.main.temp} pressure={day.main.pressure} dayTemp={day.main.temp_max} nightTemp={day.main.temp_min} />\n      })\n\n      return (\n        <div className=\"container\">\n          <CurrentWeather ID={ID} APIKey={APIKey}/>\n          <div className=\"cards\">{cardsList}</div>\n          <div className=\"icon-credit\">Icons made by <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\"                 title=\"Flaticon\">www.flaticon.com</a> is licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\"                 title=\"Creative Commons BY 3.0\" rel=\"noopener noreferrer\" target=\"_blank\">CC 3.0 BY</a></div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}